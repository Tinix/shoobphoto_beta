<br/><br/><div class="template_container">
<%= simple_form_for(@template, :remote => true, :html => { :multipart => true }, :input_html => {:id => "template_form"} ) do |f| %>
  <%= f.error_notification %>
  <% if @template.errors.any? %>
  <ul>
  <% @template.errors.each do |attr, message| %>
  <li><%= attr %>: <%= message %></li>
  <% end %>
</ul>
<% end %>

  <div class="form-inputs">
    <%= f.input :name %>
  </div>

<div class="row">
  <div class="col-sm-9">
<h3>Fields</h3> <a href="#" id="show_all">Show all</a> - <a href="#" id="hide_all">Hide unselected</a>
 
  <%= hidden_field_tag "template[category_ids][]", nil %>

<table class="table">
  <tr>
    <td>
      Fields
    </td>
    <td>
      X
      </td>
    <td>
      Y
      </td>
    <td>
      Width
      </td>
    <td>
      Height
      </td>
    <td>
      Text Size
      </td>
    <td>
      Spacing
      </td>
    <td>
      Color
      </td>
    <td>
      Align
      </td>
    <td>
      Font
    </td>
  </tr>
<% Column.all.each_with_index do |column, index| %>
<tr <%= "hidden" unless @template.columns.include? column %> id="column_template_<%= index %>">
  <td>
  <%= check_box_tag "template[column_ids][]", column.id, @template.column_ids.include?(column.id), id: dom_id(column), class: "column_input" %>
  <%= label_tag dom_id(column), column.name %><br>
</td>
  <% if Field.where(:column_id => column.id).where(:template_id => @template.id).any? %>
  <%= f.simple_fields_for :fields, Field.where(:column_id => column.id).where(:template_id => @template.id).last do |builder| %>
    <%= render 'field_fields', f: builder %>
  
  <% end %>
  <% else %>
  <%= f.simple_fields_for :fields, @template.fields.create(:column_id => column.id, :column_name => column.column_type) do |builder| %>

    <%= render 'field_fields', f: builder %>
  <% end %>
  <% end %> 
</tr>

  <% end %>
</table>
  <div class="form-actions">
    <%= f.button :submit, "Save and Preview" %>
  </div>
</div>

<div class="col-sm-3">
  <h3>Preview</h3>

  <div id="preview">
    <% if @template.export_datas.any? %>
      <%= render 'preview', :locals => {:template => @template} %>
      <% end %>
  </div>
</div>
</div>
<h3>Pdfs</h3>
<hr>
<div class="row">
    <div class="col-sm-4">
      Name
    </div>
    
    <div class="col-sm-8">
      File
    </div>
  </div>

  (Need to work on this - we'll need to be careful if there are multiple types per PDF as I'll probably only keep the first type belonging to a PDF when migrating over the data.)
    <%= f.simple_fields_for :pdfs do |builder| %>
    <%= render 'pdf_fields', f: builder %>
  <% end %>

  <%= link_to_add_fields "Add PDF", f, :pdfs %>
  
<% end %>
</div>
<script>

$(".multiple_select").select2();

$(".field_field").blur(function() {
  $(".edit_template").submit();
  $("#preview").html("Loading...");

});


$('.column_input').change(function(){
  $(".edit_template").submit();
  $("#preview").html("Loading...");
});


$(document).ready(function() {
  $('#show_all').click(function(event){
         for(var i=0;i<=18;i++){

           $("#column_template_"+i).show();     
         
           }
    event.preventDefault(); // Prevent link from following its href
  });

  $('#hide_all').click(function(event){
          <% Column.all.each_with_index do |column, index| %>
          <% unless @template.columns.include? column %>
           $("#column_template_<%= index %>").hide();    
           <% end %> 
          <% end %>
         
          
    event.preventDefault(); // Prevent link from following its href
  });

});



</script>
